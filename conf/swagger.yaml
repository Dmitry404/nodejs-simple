swagger: '2.0'
info:
  title: 'Node.js course : Phase 3 : Swagger'
  description: A bit more complicated sample project
  version: '0.3.0'
host: localhost:3000
schemes:
  - http
basePath: /
paths:
  '/api/v1/readme':
    get:
      description: Welcomes user. That's all. Nothing more..
      produces:
       - text/markdown
      responses:
        '200':
          description: I'm fine
        '304':
          description: I'm still fine
  '/books':
    get:
      description: Returns all books including Authors and book's rate
      tags:
        - books
      produces:
        application/json
      responses:
        '200':
          description: books collection
  '/books/{bookId}':
    get:
      description: Returns book info, including its authors, based on a single ID
      tags:
        - books
      produces:
        application/json
      responses:
        '200':
          description: book information
      parameters:
        - name: bookId
          in: path
          description: ID of the book to fetch
          required: true
          type: integer
  '/books/{bookId}/reviews':
    get:
      description: Returns posted user reviews, based on a single book ID
      tags:
        - books
      produces:
        application/json
      responses:
        '200':
          description: user reviews
      parameters:
        - name: bookId
          in: path
          description: ID of the book to fetch user reviews to
          required: true
          type: integer
  '/books/most-reviewed':
    get:
      description: Returns top 5 books which have most user reviews
      tags:
        - books
      produces:
        application/json
      responses:
        '200':
          description: books collection
  '/books/most-reviewed/{limit}':
    get:
      description: Returns books which have most user reviews
      tags:
        - books
      produces:
        application/json
      responses:
        '200':
          description: books collection
      parameters:
        - name: limit
          in: path
          description: maximum number of results to return
          required: true
          type: integer
  '/books/by-author/{authorId}':
    get:
      description: Returns books which have at least one of the authors based on a single ID
      tags:
        - books
      produces:
        application/json
      responses:
        '200':
          description: books collection
      parameters:
        - name: authorId
          in: path
          description: author ID
          required: true
          type: integer
  '/books/by-rate/{from}-{to}':
    get:
      description: Returns books which have rate based on a range {from}-{to}
      tags:
        - books
      produces:
        application/json
      responses:
        '200':
          description: books collection
      parameters:
        - name: from
          in: path
          description: min book rate to include into result
          required: true
          type: integer
        - name: to
          in: path
          description: max book rate to include into result
          required: true
          type: integer